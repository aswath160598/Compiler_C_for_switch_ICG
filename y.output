Terminals unused in grammar

   DEFINE
   STRUCT
   CONTINUE


Grammar

    0 $accept: translation_unit $end

    1 headers: HASH INCLUDE HEADER_LITERAL
    2        | HASH INCLUDE '<' libraries '>'

    3 libraries: STDIO
    4          | STDLIB
    5          | MATH
    6          | STRING
    7          | TIME

    8 primary_expression: IDENTIFIER
    9                   | INTEGER_LITERAL
   10                   | FLOAT_LITERAL
   11                   | STRING_LITERAL
   12                   | '(' expression ')'

   13 postfix_expression: primary_expression
   14                   | postfix_expression '(' ')'
   15                   | postfix_expression '.' IDENTIFIER
   16                   | postfix_expression INC_OP
   17                   | postfix_expression DEC_OP
   18                   | INC_OP primary_expression
   19                   | DEC_OP primary_expression

   20 unary_expression: postfix_expression
   21                 | '+' unary_expression
   22                 | '-' unary_expression

   23 multiplicative_expression: unary_expression
   24                          | multiplicative_expression '*' unary_expression
   25                          | multiplicative_expression '/' unary_expression
   26                          | multiplicative_expression '%' unary_expression

   27 additive_expression: multiplicative_expression
   28                    | additive_expression '+' multiplicative_expression
   29                    | additive_expression '-' multiplicative_expression

   30 relational_expression: additive_expression
   31                      | relational_expression '<' additive_expression
   32                      | relational_expression '>' additive_expression
   33                      | relational_expression LE_OP additive_expression
   34                      | relational_expression GE_OP additive_expression

   35 equality_expression: relational_expression
   36                    | equality_expression EQ_OP relational_expression
   37                    | equality_expression NE_OP relational_expression

   38 conditional_expression: equality_expression

   39 $@1: %empty

   40 $@2: %empty

   41 conditional_expression: equality_expression $@1 '?' expression $@2 ':' conditional_expression

   42 assignment_expression: conditional_expression
   43                      | unary_expression '=' assignment_expression
   44                      | unary_expression ADD_ASSIGN assignment_expression
   45                      | unary_expression SUB_ASSIGN assignment_expression

   46 expression: assignment_expression
   47           | expression ',' assignment_expression

   48 constant_expression: conditional_expression

   49 declaration: type_specifier ';'
   50            | type_specifier init_declarator_list ';'

   51 init_declarator_list: init_declarator
   52                     | init_declarator_list ',' init_declarator

   53 $@3: %empty

   54 init_declarator: IDENTIFIER $@3 '=' assignment_expression
   55                | IDENTIFIER

   56 type_specifier: VOID
   57               | CHAR
   58               | INT
   59               | FLOAT

   60 statement: compound_statement
   61          | expression_statement
   62          | iteration_statement
   63          | selection_statement

   64 compound_statement: '{' block_item_list '}'

   65 block_item_list: block_item
   66                | block_item_list block_item

   67 block_item: declaration
   68           | statement

   69 expression_statement: ';'
   70                     | expression ';'

   71 $@4: %empty

   72 $@5: %empty

   73 $@6: %empty

   74 $@7: %empty

   75 iteration_statement: FOR '(' expression_statement $@4 expression_statement $@5 expression $@6 ')' $@7 statement

   76 translation_unit: external_declaration
   77                 | translation_unit external_declaration

   78 $@8: %empty

   79 selection_statement: SWITCH '(' expression $@8 ')' '{' case_statement_list '}'

   80 case_statement_list: case_statement
   81                    | case_statement break_statement case_statement_list
   82                    | case_statement case_statement_list
   83                    | default_line
   84                    | break_statement

   85 $@9: %empty

   86 case_statement: CASE constant_expression $@9 ':' block_item_list

   87 break_statement: BREAK ';'

   88 $@10: %empty

   89 default_line: DEFAULT ':' $@10 block_item_list

   90 external_declaration: INT MAIN '(' ')' compound_statement
   91                     | declaration
   92                     | headers


Terminals, with rules where they appear

$end (0) 0
'%' (37) 26
'(' (40) 12 14 75 79 90
')' (41) 12 14 75 79 90
'*' (42) 24
'+' (43) 21 28
',' (44) 47 52
'-' (45) 22 29
'.' (46) 15
'/' (47) 25
':' (58) 41 86 89
';' (59) 49 50 69 70 87
'<' (60) 2 31
'=' (61) 43 54
'>' (62) 2 32
'?' (63) 41
'{' (123) 64 79
'}' (125) 64 79
error (256)
HASH (258) 1 2
INCLUDE (259) 1 2
DEFINE (260)
STDIO (261) 3
STDLIB (262) 4
MATH (263) 5
STRING (264) 6
TIME (265) 7
IDENTIFIER (266) 8 15 54 55
INTEGER_LITERAL (267) 9
STRING_LITERAL (268) 11
HEADER_LITERAL (269) 1
FLOAT_LITERAL (270) 10
INC_OP (271) 16 18
DEC_OP (272) 17 19
LE_OP (273) 33
GE_OP (274) 34
EQ_OP (275) 36
NE_OP (276) 37
ADD_ASSIGN (277) 44
SUB_ASSIGN (278) 45
CHAR (279) 57
INT (280) 58 90
FLOAT (281) 59
VOID (282) 56
MAIN (283) 90
STRUCT (284)
BREAK (285) 87
DEFAULT (286) 89
CONTINUE (287)
CASE (288) 86
SWITCH (289) 79
FOR (290) 75


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
headers (54)
    on left: 1 2, on right: 92
libraries (55)
    on left: 3 4 5 6 7, on right: 2
primary_expression (56)
    on left: 8 9 10 11 12, on right: 13 18 19
postfix_expression (57)
    on left: 13 14 15 16 17 18 19, on right: 14 15 16 17 20
unary_expression (58)
    on left: 20 21 22, on right: 21 22 23 24 25 26 43 44 45
multiplicative_expression (59)
    on left: 23 24 25 26, on right: 24 25 26 27 28 29
additive_expression (60)
    on left: 27 28 29, on right: 28 29 30 31 32 33 34
relational_expression (61)
    on left: 30 31 32 33 34, on right: 31 32 33 34 35 36 37
equality_expression (62)
    on left: 35 36 37, on right: 36 37 38 41
conditional_expression (63)
    on left: 38 41, on right: 41 42 48
$@1 (64)
    on left: 39, on right: 41
$@2 (65)
    on left: 40, on right: 41
assignment_expression (66)
    on left: 42 43 44 45, on right: 43 44 45 46 47 54
expression (67)
    on left: 46 47, on right: 12 41 47 70 75 79
constant_expression (68)
    on left: 48, on right: 86
declaration (69)
    on left: 49 50, on right: 67 91
init_declarator_list (70)
    on left: 51 52, on right: 50 52
init_declarator (71)
    on left: 54 55, on right: 51 52
$@3 (72)
    on left: 53, on right: 54
type_specifier (73)
    on left: 56 57 58 59, on right: 49 50
statement (74)
    on left: 60 61 62 63, on right: 68 75
compound_statement (75)
    on left: 64, on right: 60 90
block_item_list (76)
    on left: 65 66, on right: 64 66 86 89
block_item (77)
    on left: 67 68, on right: 65 66
expression_statement (78)
    on left: 69 70, on right: 61 75
iteration_statement (79)
    on left: 75, on right: 62
$@4 (80)
    on left: 71, on right: 75
$@5 (81)
    on left: 72, on right: 75
$@6 (82)
    on left: 73, on right: 75
$@7 (83)
    on left: 74, on right: 75
translation_unit (84)
    on left: 76 77, on right: 0 77
selection_statement (85)
    on left: 79, on right: 63
$@8 (86)
    on left: 78, on right: 79
case_statement_list (87)
    on left: 80 81 82 83 84, on right: 79 81 82
case_statement (88)
    on left: 86, on right: 80 81 82
$@9 (89)
    on left: 85, on right: 86
break_statement (90)
    on left: 87, on right: 81 84
default_line (91)
    on left: 89, on right: 83
$@10 (92)
    on left: 88, on right: 89
external_declaration (93)
    on left: 90 91 92, on right: 76 77


State 0

    0 $accept: . translation_unit $end

    HASH   shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    VOID   shift, and go to state 5

    headers               go to state 6
    declaration           go to state 7
    type_specifier        go to state 8
    translation_unit      go to state 9
    external_declaration  go to state 10


State 1

    1 headers: HASH . INCLUDE HEADER_LITERAL
    2        | HASH . INCLUDE '<' libraries '>'

    INCLUDE  shift, and go to state 11


State 2

   57 type_specifier: CHAR .

    $default  reduce using rule 57 (type_specifier)


State 3

   58 type_specifier: INT .
   90 external_declaration: INT . MAIN '(' ')' compound_statement

    MAIN  shift, and go to state 12

    $default  reduce using rule 58 (type_specifier)


State 4

   59 type_specifier: FLOAT .

    $default  reduce using rule 59 (type_specifier)


State 5

   56 type_specifier: VOID .

    $default  reduce using rule 56 (type_specifier)


State 6

   92 external_declaration: headers .

    $default  reduce using rule 92 (external_declaration)


State 7

   91 external_declaration: declaration .

    $default  reduce using rule 91 (external_declaration)


State 8

   49 declaration: type_specifier . ';'
   50            | type_specifier . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 13
    ';'         shift, and go to state 14

    init_declarator_list  go to state 15
    init_declarator       go to state 16


State 9

    0 $accept: translation_unit . $end
   77 translation_unit: translation_unit . external_declaration

    $end   shift, and go to state 17
    HASH   shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    VOID   shift, and go to state 5

    headers               go to state 6
    declaration           go to state 7
    type_specifier        go to state 8
    external_declaration  go to state 18


State 10

   76 translation_unit: external_declaration .

    $default  reduce using rule 76 (translation_unit)


State 11

    1 headers: HASH INCLUDE . HEADER_LITERAL
    2        | HASH INCLUDE . '<' libraries '>'

    HEADER_LITERAL  shift, and go to state 19
    '<'             shift, and go to state 20


State 12

   90 external_declaration: INT MAIN . '(' ')' compound_statement

    '('  shift, and go to state 21


State 13

   54 init_declarator: IDENTIFIER . $@3 '=' assignment_expression
   55                | IDENTIFIER .

    '='       reduce using rule 53 ($@3)
    $default  reduce using rule 55 (init_declarator)

    $@3  go to state 22


State 14

   49 declaration: type_specifier ';' .

    $default  reduce using rule 49 (declaration)


State 15

   50 declaration: type_specifier init_declarator_list . ';'
   52 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 23
    ';'  shift, and go to state 24


State 16

   51 init_declarator_list: init_declarator .

    $default  reduce using rule 51 (init_declarator_list)


State 17

    0 $accept: translation_unit $end .

    $default  accept


State 18

   77 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 77 (translation_unit)


State 19

    1 headers: HASH INCLUDE HEADER_LITERAL .

    $default  reduce using rule 1 (headers)


State 20

    2 headers: HASH INCLUDE '<' . libraries '>'

    STDIO   shift, and go to state 25
    STDLIB  shift, and go to state 26
    MATH    shift, and go to state 27
    STRING  shift, and go to state 28
    TIME    shift, and go to state 29

    libraries  go to state 30


State 21

   90 external_declaration: INT MAIN '(' . ')' compound_statement

    ')'  shift, and go to state 31


State 22

   54 init_declarator: IDENTIFIER $@3 . '=' assignment_expression

    '='  shift, and go to state 32


State 23

   52 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 13

    init_declarator  go to state 33


State 24

   50 declaration: type_specifier init_declarator_list ';' .

    $default  reduce using rule 50 (declaration)


State 25

    3 libraries: STDIO .

    $default  reduce using rule 3 (libraries)


State 26

    4 libraries: STDLIB .

    $default  reduce using rule 4 (libraries)


State 27

    5 libraries: MATH .

    $default  reduce using rule 5 (libraries)


State 28

    6 libraries: STRING .

    $default  reduce using rule 6 (libraries)


State 29

    7 libraries: TIME .

    $default  reduce using rule 7 (libraries)


State 30

    2 headers: HASH INCLUDE '<' libraries . '>'

    '>'  shift, and go to state 34


State 31

   90 external_declaration: INT MAIN '(' ')' . compound_statement

    '{'  shift, and go to state 35

    compound_statement  go to state 36


State 32

   54 init_declarator: IDENTIFIER $@3 '=' . assignment_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 54


State 33

   52 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 52 (init_declarator_list)


State 34

    2 headers: HASH INCLUDE '<' libraries '>' .

    $default  reduce using rule 2 (headers)


State 35

   64 compound_statement: '{' . block_item_list '}'

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    CHAR             shift, and go to state 2
    INT              shift, and go to state 55
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    SWITCH           shift, and go to state 56
    FOR              shift, and go to state 57
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58
    '{'              shift, and go to state 35

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    declaration                go to state 61
    type_specifier             go to state 8
    statement                  go to state 62
    compound_statement         go to state 63
    block_item_list            go to state 64
    block_item                 go to state 65
    expression_statement       go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68


State 36

   90 external_declaration: INT MAIN '(' ')' compound_statement .

    $default  reduce using rule 90 (external_declaration)


State 37

    8 primary_expression: IDENTIFIER .

    $default  reduce using rule 8 (primary_expression)


State 38

    9 primary_expression: INTEGER_LITERAL .

    $default  reduce using rule 9 (primary_expression)


State 39

   11 primary_expression: STRING_LITERAL .

    $default  reduce using rule 11 (primary_expression)


State 40

   10 primary_expression: FLOAT_LITERAL .

    $default  reduce using rule 10 (primary_expression)


State 41

   18 postfix_expression: INC_OP . primary_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    '('              shift, and go to state 43

    primary_expression  go to state 69


State 42

   19 postfix_expression: DEC_OP . primary_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    '('              shift, and go to state 43

    primary_expression  go to state 70


State 43

   12 primary_expression: '(' . expression ')'

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 71


State 44

   21 unary_expression: '+' . unary_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 72


State 45

   22 unary_expression: '-' . unary_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 73


State 46

   13 postfix_expression: primary_expression .

    $default  reduce using rule 13 (postfix_expression)


State 47

   14 postfix_expression: postfix_expression . '(' ')'
   15                   | postfix_expression . '.' IDENTIFIER
   16                   | postfix_expression . INC_OP
   17                   | postfix_expression . DEC_OP
   20 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 74
    DEC_OP  shift, and go to state 75
    '('     shift, and go to state 76
    '.'     shift, and go to state 77

    $default  reduce using rule 20 (unary_expression)


State 48

   23 multiplicative_expression: unary_expression .
   43 assignment_expression: unary_expression . '=' assignment_expression
   44                      | unary_expression . ADD_ASSIGN assignment_expression
   45                      | unary_expression . SUB_ASSIGN assignment_expression

    ADD_ASSIGN  shift, and go to state 78
    SUB_ASSIGN  shift, and go to state 79
    '='         shift, and go to state 80

    $default  reduce using rule 23 (multiplicative_expression)


State 49

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   27 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '%'  shift, and go to state 83

    $default  reduce using rule 27 (additive_expression)


State 50

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   30 relational_expression: additive_expression .

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 30 (relational_expression)


State 51

   31 relational_expression: relational_expression . '<' additive_expression
   32                      | relational_expression . '>' additive_expression
   33                      | relational_expression . LE_OP additive_expression
   34                      | relational_expression . GE_OP additive_expression
   35 equality_expression: relational_expression .

    LE_OP  shift, and go to state 86
    GE_OP  shift, and go to state 87
    '<'    shift, and go to state 88
    '>'    shift, and go to state 89

    $default  reduce using rule 35 (equality_expression)


State 52

   36 equality_expression: equality_expression . EQ_OP relational_expression
   37                    | equality_expression . NE_OP relational_expression
   38 conditional_expression: equality_expression .
   41                       | equality_expression . $@1 '?' expression $@2 ':' conditional_expression

    EQ_OP  shift, and go to state 90
    NE_OP  shift, and go to state 91

    '?'       reduce using rule 39 ($@1)
    $default  reduce using rule 38 (conditional_expression)

    $@1  go to state 92


State 53

   42 assignment_expression: conditional_expression .

    $default  reduce using rule 42 (assignment_expression)


State 54

   54 init_declarator: IDENTIFIER $@3 '=' assignment_expression .

    $default  reduce using rule 54 (init_declarator)


State 55

   58 type_specifier: INT .

    $default  reduce using rule 58 (type_specifier)


State 56

   79 selection_statement: SWITCH . '(' expression $@8 ')' '{' case_statement_list '}'

    '('  shift, and go to state 93


State 57

   75 iteration_statement: FOR . '(' expression_statement $@4 expression_statement $@5 expression $@6 ')' $@7 statement

    '('  shift, and go to state 94


State 58

   69 expression_statement: ';' .

    $default  reduce using rule 69 (expression_statement)


State 59

   46 expression: assignment_expression .

    $default  reduce using rule 46 (expression)


State 60

   47 expression: expression . ',' assignment_expression
   70 expression_statement: expression . ';'

    ','  shift, and go to state 95
    ';'  shift, and go to state 96


State 61

   67 block_item: declaration .

    $default  reduce using rule 67 (block_item)


State 62

   68 block_item: statement .

    $default  reduce using rule 68 (block_item)


State 63

   60 statement: compound_statement .

    $default  reduce using rule 60 (statement)


State 64

   64 compound_statement: '{' block_item_list . '}'
   66 block_item_list: block_item_list . block_item

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    CHAR             shift, and go to state 2
    INT              shift, and go to state 55
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    SWITCH           shift, and go to state 56
    FOR              shift, and go to state 57
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58
    '{'              shift, and go to state 35
    '}'              shift, and go to state 97

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    declaration                go to state 61
    type_specifier             go to state 8
    statement                  go to state 62
    compound_statement         go to state 63
    block_item                 go to state 98
    expression_statement       go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68


State 65

   65 block_item_list: block_item .

    $default  reduce using rule 65 (block_item_list)


State 66

   61 statement: expression_statement .

    $default  reduce using rule 61 (statement)


State 67

   62 statement: iteration_statement .

    $default  reduce using rule 62 (statement)


State 68

   63 statement: selection_statement .

    $default  reduce using rule 63 (statement)


State 69

   18 postfix_expression: INC_OP primary_expression .

    $default  reduce using rule 18 (postfix_expression)


State 70

   19 postfix_expression: DEC_OP primary_expression .

    $default  reduce using rule 19 (postfix_expression)


State 71

   12 primary_expression: '(' expression . ')'
   47 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 99
    ','  shift, and go to state 95


State 72

   21 unary_expression: '+' unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 73

   22 unary_expression: '-' unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 74

   16 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 16 (postfix_expression)


State 75

   17 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 17 (postfix_expression)


State 76

   14 postfix_expression: postfix_expression '(' . ')'

    ')'  shift, and go to state 100


State 77

   15 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 101


State 78

   44 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 102


State 79

   45 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 103


State 80

   43 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 104


State 81

   24 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 105


State 82

   25 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 106


State 83

   26 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 107


State 84

   28 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 109


State 85

   29 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 110


State 86

   33 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 49
    additive_expression        go to state 111


State 87

   34 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 49
    additive_expression        go to state 112


State 88

   31 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 49
    additive_expression        go to state 113


State 89

   32 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 49
    additive_expression        go to state 114


State 90

   36 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 115


State 91

   37 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 116


State 92

   41 conditional_expression: equality_expression $@1 . '?' expression $@2 ':' conditional_expression

    '?'  shift, and go to state 117


State 93

   79 selection_statement: SWITCH '(' . expression $@8 ')' '{' case_statement_list '}'

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 118


State 94

   75 iteration_statement: FOR '(' . expression_statement $@4 expression_statement $@5 expression $@6 ')' $@7 statement

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    expression_statement       go to state 119


State 95

   47 expression: expression ',' . assignment_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 120


State 96

   70 expression_statement: expression ';' .

    $default  reduce using rule 70 (expression_statement)


State 97

   64 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 64 (compound_statement)


State 98

   66 block_item_list: block_item_list block_item .

    $default  reduce using rule 66 (block_item_list)


State 99

   12 primary_expression: '(' expression ')' .

    $default  reduce using rule 12 (primary_expression)


State 100

   14 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 14 (postfix_expression)


State 101

   15 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 15 (postfix_expression)


State 102

   44 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 44 (assignment_expression)


State 103

   45 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 45 (assignment_expression)


State 104

   43 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 43 (assignment_expression)


State 105

   24 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 24 (multiplicative_expression)


State 106

   25 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 25 (multiplicative_expression)


State 107

   26 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 26 (multiplicative_expression)


State 108

   23 multiplicative_expression: unary_expression .

    $default  reduce using rule 23 (multiplicative_expression)


State 109

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   28 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '%'  shift, and go to state 83

    $default  reduce using rule 28 (additive_expression)


State 110

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   29 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '%'  shift, and go to state 83

    $default  reduce using rule 29 (additive_expression)


State 111

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   33 relational_expression: relational_expression LE_OP additive_expression .

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 33 (relational_expression)


State 112

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   34 relational_expression: relational_expression GE_OP additive_expression .

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 34 (relational_expression)


State 113

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   31 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 31 (relational_expression)


State 114

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   32 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 32 (relational_expression)


State 115

   31 relational_expression: relational_expression . '<' additive_expression
   32                      | relational_expression . '>' additive_expression
   33                      | relational_expression . LE_OP additive_expression
   34                      | relational_expression . GE_OP additive_expression
   36 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 86
    GE_OP  shift, and go to state 87
    '<'    shift, and go to state 88
    '>'    shift, and go to state 89

    $default  reduce using rule 36 (equality_expression)


State 116

   31 relational_expression: relational_expression . '<' additive_expression
   32                      | relational_expression . '>' additive_expression
   33                      | relational_expression . LE_OP additive_expression
   34                      | relational_expression . GE_OP additive_expression
   37 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 86
    GE_OP  shift, and go to state 87
    '<'    shift, and go to state 88
    '>'    shift, and go to state 89

    $default  reduce using rule 37 (equality_expression)


State 117

   41 conditional_expression: equality_expression $@1 '?' . expression $@2 ':' conditional_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 121


State 118

   47 expression: expression . ',' assignment_expression
   79 selection_statement: SWITCH '(' expression . $@8 ')' '{' case_statement_list '}'

    ','  shift, and go to state 95

    $default  reduce using rule 78 ($@8)

    $@8  go to state 122


State 119

   75 iteration_statement: FOR '(' expression_statement . $@4 expression_statement $@5 expression $@6 ')' $@7 statement

    $default  reduce using rule 71 ($@4)

    $@4  go to state 123


State 120

   47 expression: expression ',' assignment_expression .

    $default  reduce using rule 47 (expression)


State 121

   41 conditional_expression: equality_expression $@1 '?' expression . $@2 ':' conditional_expression
   47 expression: expression . ',' assignment_expression

    ','  shift, and go to state 95

    $default  reduce using rule 40 ($@2)

    $@2  go to state 124


State 122

   79 selection_statement: SWITCH '(' expression $@8 . ')' '{' case_statement_list '}'

    ')'  shift, and go to state 125


State 123

   75 iteration_statement: FOR '(' expression_statement $@4 . expression_statement $@5 expression $@6 ')' $@7 statement

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    expression_statement       go to state 126


State 124

   41 conditional_expression: equality_expression $@1 '?' expression $@2 . ':' conditional_expression

    ':'  shift, and go to state 127


State 125

   79 selection_statement: SWITCH '(' expression $@8 ')' . '{' case_statement_list '}'

    '{'  shift, and go to state 128


State 126

   75 iteration_statement: FOR '(' expression_statement $@4 expression_statement . $@5 expression $@6 ')' $@7 statement

    $default  reduce using rule 72 ($@5)

    $@5  go to state 129


State 127

   41 conditional_expression: equality_expression $@1 '?' expression $@2 ':' . conditional_expression

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 130


State 128

   79 selection_statement: SWITCH '(' expression $@8 ')' '{' . case_statement_list '}'

    BREAK    shift, and go to state 131
    DEFAULT  shift, and go to state 132
    CASE     shift, and go to state 133

    case_statement_list  go to state 134
    case_statement       go to state 135
    break_statement      go to state 136
    default_line         go to state 137


State 129

   75 iteration_statement: FOR '(' expression_statement $@4 expression_statement $@5 . expression $@6 ')' $@7 statement

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 138


State 130

   41 conditional_expression: equality_expression $@1 '?' expression $@2 ':' conditional_expression .

    $default  reduce using rule 41 (conditional_expression)


State 131

   87 break_statement: BREAK . ';'

    ';'  shift, and go to state 139


State 132

   89 default_line: DEFAULT . ':' $@10 block_item_list

    ':'  shift, and go to state 140


State 133

   86 case_statement: CASE . constant_expression $@9 ':' block_item_list

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 108
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 141
    constant_expression        go to state 142


State 134

   79 selection_statement: SWITCH '(' expression $@8 ')' '{' case_statement_list . '}'

    '}'  shift, and go to state 143


State 135

   80 case_statement_list: case_statement .
   81                    | case_statement . break_statement case_statement_list
   82                    | case_statement . case_statement_list

    BREAK    shift, and go to state 131
    DEFAULT  shift, and go to state 132
    CASE     shift, and go to state 133

    $default  reduce using rule 80 (case_statement_list)

    case_statement_list  go to state 144
    case_statement       go to state 135
    break_statement      go to state 145
    default_line         go to state 137


State 136

   84 case_statement_list: break_statement .

    $default  reduce using rule 84 (case_statement_list)


State 137

   83 case_statement_list: default_line .

    $default  reduce using rule 83 (case_statement_list)


State 138

   47 expression: expression . ',' assignment_expression
   75 iteration_statement: FOR '(' expression_statement $@4 expression_statement $@5 expression . $@6 ')' $@7 statement

    ','  shift, and go to state 95

    $default  reduce using rule 73 ($@6)

    $@6  go to state 146


State 139

   87 break_statement: BREAK ';' .

    $default  reduce using rule 87 (break_statement)


State 140

   89 default_line: DEFAULT ':' . $@10 block_item_list

    $default  reduce using rule 88 ($@10)

    $@10  go to state 147


State 141

   48 constant_expression: conditional_expression .

    $default  reduce using rule 48 (constant_expression)


State 142

   86 case_statement: CASE constant_expression . $@9 ':' block_item_list

    $default  reduce using rule 85 ($@9)

    $@9  go to state 148


State 143

   79 selection_statement: SWITCH '(' expression $@8 ')' '{' case_statement_list '}' .

    $default  reduce using rule 79 (selection_statement)


State 144

   82 case_statement_list: case_statement case_statement_list .

    $default  reduce using rule 82 (case_statement_list)


State 145

   81 case_statement_list: case_statement break_statement . case_statement_list
   84                    | break_statement .

    BREAK    shift, and go to state 131
    DEFAULT  shift, and go to state 132
    CASE     shift, and go to state 133

    $default  reduce using rule 84 (case_statement_list)

    case_statement_list  go to state 149
    case_statement       go to state 135
    break_statement      go to state 136
    default_line         go to state 137


State 146

   75 iteration_statement: FOR '(' expression_statement $@4 expression_statement $@5 expression $@6 . ')' $@7 statement

    ')'  shift, and go to state 150


State 147

   89 default_line: DEFAULT ':' $@10 . block_item_list

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    CHAR             shift, and go to state 2
    INT              shift, and go to state 55
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    SWITCH           shift, and go to state 56
    FOR              shift, and go to state 57
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58
    '{'              shift, and go to state 35

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    declaration                go to state 61
    type_specifier             go to state 8
    statement                  go to state 62
    compound_statement         go to state 63
    block_item_list            go to state 151
    block_item                 go to state 65
    expression_statement       go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68


State 148

   86 case_statement: CASE constant_expression $@9 . ':' block_item_list

    ':'  shift, and go to state 152


State 149

   81 case_statement_list: case_statement break_statement case_statement_list .

    $default  reduce using rule 81 (case_statement_list)


State 150

   75 iteration_statement: FOR '(' expression_statement $@4 expression_statement $@5 expression $@6 ')' . $@7 statement

    $default  reduce using rule 74 ($@7)

    $@7  go to state 153


State 151

   66 block_item_list: block_item_list . block_item
   89 default_line: DEFAULT ':' $@10 block_item_list .

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    CHAR             shift, and go to state 2
    INT              shift, and go to state 55
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    SWITCH           shift, and go to state 56
    FOR              shift, and go to state 57
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58
    '{'              shift, and go to state 35

    $default  reduce using rule 89 (default_line)

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    declaration                go to state 61
    type_specifier             go to state 8
    statement                  go to state 62
    compound_statement         go to state 63
    block_item                 go to state 98
    expression_statement       go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68


State 152

   86 case_statement: CASE constant_expression $@9 ':' . block_item_list

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    CHAR             shift, and go to state 2
    INT              shift, and go to state 55
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    SWITCH           shift, and go to state 56
    FOR              shift, and go to state 57
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58
    '{'              shift, and go to state 35

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    declaration                go to state 61
    type_specifier             go to state 8
    statement                  go to state 62
    compound_statement         go to state 63
    block_item_list            go to state 154
    block_item                 go to state 65
    expression_statement       go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68


State 153

   75 iteration_statement: FOR '(' expression_statement $@4 expression_statement $@5 expression $@6 ')' $@7 . statement

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    SWITCH           shift, and go to state 56
    FOR              shift, and go to state 57
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58
    '{'              shift, and go to state 35

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    statement                  go to state 155
    compound_statement         go to state 63
    expression_statement       go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68


State 154

   66 block_item_list: block_item_list . block_item
   86 case_statement: CASE constant_expression $@9 ':' block_item_list .

    IDENTIFIER       shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 38
    STRING_LITERAL   shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    CHAR             shift, and go to state 2
    INT              shift, and go to state 55
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    SWITCH           shift, and go to state 56
    FOR              shift, and go to state 57
    '('              shift, and go to state 43
    '+'              shift, and go to state 44
    '-'              shift, and go to state 45
    ';'              shift, and go to state 58
    '{'              shift, and go to state 35

    $default  reduce using rule 86 (case_statement)

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    multiplicative_expression  go to state 49
    additive_expression        go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 59
    expression                 go to state 60
    declaration                go to state 61
    type_specifier             go to state 8
    statement                  go to state 62
    compound_statement         go to state 63
    block_item                 go to state 98
    expression_statement       go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68


State 155

   75 iteration_statement: FOR '(' expression_statement $@4 expression_statement $@5 expression $@6 ')' $@7 statement .

    $default  reduce using rule 75 (iteration_statement)
